@{
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Mvc.Rendering
@model IEnumerable<PruebaApi.Models.ModeGestoresSaldos>

<div class="text-center">
    <h1 class="display-4">SALDOS GESTORES</h1>
    <h4>Saldos asociados a los gestores calculo desde base de datos</h4>
</div>
<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>

@{
    int pageSize = 10;
    int pageIndex = Context.Request.Query["pageIndex"].FirstOrDefault() != null ? Convert.ToInt32(Context.Request.Query["pageIndex"].FirstOrDefault()) : 1;
    int totalItems = Model.Count();
    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);

    decimal totalSaldo = Model.Sum(m => m.saldo_gestor ?? 0);
}

<div class="container mt-4">

    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>#</th>
                <th>Nombre</th>
                <th>Teléfono</th>
                <th>Correo Electronico</th>
                <th>Saldo</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int consecutivo = 1 + ((pageIndex - 1) * 10);
                @foreach (var item in Model.Skip((pageIndex - 1) * pageSize).Take(pageSize))
                {
                    <tr>
                        <td>@consecutivo</td>
                        <td>@(item.nombre ?? "N/A")</td>
                        <td>@(item.telefono ?? "N/A")</td>
                        <td>@(item.correo_electronico ?? "N/A")</td>
                        <td>@(item.saldo_gestor.HasValue ? item.saldo_gestor.Value.ToString("C") : "0.00")</td>
                    </tr>
                    consecutivo++;
                }

                
            }
            else
            {
                <tr>
                    <td colspan="8">No hay datos asociados a los gestores.</td>
                </tr>
            }

            <tr class="font-weight-bold">
                <td colspan="4" class="text-right">Saldo Total:</td>
                <td>@totalSaldo.ToString("C")</td>
            </tr>

        </tbody>
    </table>

    @if (totalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-center">
                <li class="page-item @(pageIndex == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("AsociarDeudores", new { PageIndex = 1 })">Primero</a>
                </li>
                <li class="page-item @(pageIndex <= 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("AsociarDeudores", new { PageIndex = pageIndex - 1 })">Anterior</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == pageIndex ? "active" : "")">
                        <a class="page-link" href="@Url.Action("AsociarDeudores", new { PageIndex = i })">@i</a>
                    </li>
                }
                <li class="page-item @(pageIndex >= totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("AsociarDeudores", new { PageIndex = pageIndex + 1 })">Siguiente</a>
                </li>
                <li class="page-item @(pageIndex == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("AsociarDeudores", new { PageIndex = totalPages })">Último</a>
                </li>
            </ul>
        </nav>
    }

</div>
